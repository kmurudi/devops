---
- hosts: all
  gather_facts: no
  become : yes

  tasks:

  - name: Update all packages to the latest version
    apt:
      update_cache: yes
      upgrade: dist

  - name: Add source key for Jenkins
    apt_key:
      url: "https://pkg.jenkins.io/debian/jenkins-ci.org.key"
      state: present

  - name: Add source repo for Jenkins
    apt_repository:
      repo: "deb http://pkg.jenkins.io/debian-stable binary/"
      state: present
      update_cache: yes

  - name: Install Jenkins and dependencies
    apt:
      name: jenkins
      state: present
    register: jenkins_install

  - name: disable startup screen
    lineinfile:
      path: /etc/default/jenkins
      line: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
      regexp: '^JAVA_ARGS='

  # should execute only at jenkins first run
  - name: create custom init scripts directory
    file:
      path: /var/lib/jenkins/init.groovy.d
      state: directory
      owner: jenkins
      group: jenkins
      mode: 0775
    when: jenkins_install|changed

  - name: configure default users
    template:
      src: basic-security.groovy
      dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
      owner: jenkins
      group: jenkins
      mode: 0775
    when: jenkins_install|changed

  - name: Restart jenkins
    service:
      name: jenkins
      state: restarted
    when: jenkins_install|changed

  - name: Ensure Jenkins is started and runs on startup.
    service: name=jenkins state=started enabled=yes

  - name: Wait for Jenkins to start up before proceeding.
    shell: "curl -D - --silent --max-time 5 http://localhost:8080/cli/"
    register: result
    until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
    retries: 5
    delay: 5
    changed_when: false

  - name: Remove Jenkins security init scripts after first startup.
    file:
      path: /var/lib/jenkins/init.groovy.d/basic-security.groovy
      state: absent
    when: jenkins_install|changed

  - name: Install plugins
    jenkins_plugin:
      name: "{{ item }}"
      state: present
      timeout: 30
      params:
        url_username: admin
        url_password: admin
    with_items:
      - workflow-aggregator
      - github-branch-source
    retries: 5
    register: plugin_install

  - name: Restart jenkins
    service:
      name: jenkins
      state: restarted
    when: plugin_install|changed

  - name: Ensure Jenkins is started and runs on startup.
    service: name=jenkins state=started enabled=yes

  - name: Wait for Jenkins to start up before proceeding.
    shell: "curl -D - --silent --max-time 5 http://localhost:8080/cli/"
    register: result
    until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
    retries: 5
    delay: 5
    changed_when: false

  - name: install python-pip
    apt: 
      name: python-pip
      state: present

  - name: pip install lxml, python-jenkins
    pip:
      name: "{{ item }}"
      state: present
    with_items:
      - python-jenkins
      - lxml

  - name: add a build job to jenkins
    jenkins_job:
      config: "{{ lookup('file', 'checkbox.xml') }}"
      state: present
      name: checkbox
      url: http://localhost:8080/
      user: admin
      password: admin

  # - name: Add source key for docker
  #   apt_key:
  #     url: "https://download.docker.com/linux/ubuntu/gpg"
  #     state: present

  # - name: Add source repo for docker
  #   apt_repository:
  #     repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
  #     state: present
  #     update_cache: yes

  # - name: Install docker
  #   apt:
  #     name: docker-ce
  #     state: present

  # - name: Add user to docker group
  #   user:
  #     name: vagrant
  #     append: yes
  #     groups: docker

  - name: download jenkins-cli
    get_url:
      url: http://localhost:8080/jnlpJars/jenkins-cli.jar
      dest: /home/vagrant/

  - name: install build dependency - npm
    apt:
      name: npm
      state: present

  - name: trigger build
    command: java -jar jenkins-cli.jar -s http://localhost:8080/ build checkbox --username admin --password admin
    args:
      chdir: /home/vagrant/
    
  - name: see build result 
    command: java -jar jenkins-cli.jar -s http://localhost:8080/ console checkbox --username admin --password admin
    register: build_result 
    until: (build_result.stdout.find("SUCCESS") != -1)
    retries: 5
    delay: 10
    ignore_errors: yes
  
  - debug:
      var: build_result.stdout_lines